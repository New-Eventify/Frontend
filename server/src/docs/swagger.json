{
    "openapi": "3.0.0",
    "info": {
        "title": "Event Management API",
        "version": "1.0.0",
        "description": "API documentation for the Event Management Application"
    },
    "paths": {
        "/api/users/signup": {
            "post": {
                "summary": "Sign up a new user",
                "description": "Register a new user with email and password.",
                "tags": ["Auth"],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "required": ["email", "password"]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User successfully registered."
                    },
                    "400": {
                        "description": "Invalid input data."
                    }
                }
            }
        },
        "/api/users/signin": {
            "post": {
                "summary": "Sign in an existing user",
                "description": "Authenticate a user and return a JWT token.",
                "tags": ["Auth"],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "required": ["email", "password"]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User successfully authenticated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "token": {
                                            "type": "string",
                                            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid email or password."
                    }
                }
            }
        },
        "/api/users/signout": {
            "post": {
                "tags": ["Auth"],
                "summary": "Sign out a user",
                "description": "Invalidates the user's session by signing them out. Requires authentication.",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User signed out successfully",
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "Successfully signed out"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Token not provided",
                        "content": {
                            "application/json": {
                                "example": {
                                    "error": "Token is required to sign out"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "example": {
                                    "error": "Failed to sign out",
                                    "details": "Error details here"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/events/create": {
            "post": {
                "summary": "Create a new event",
                "description": "Allows authenticated users to create a new event with sessions, venue, and optional tickets.",
                "tags": ["Events"],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Tech Conference"
                                    },
                                    "event_category": {
                                        "type": "string",
                                        "example": "Technology"
                                    },
                                    "event_type": {
                                        "type": "string",
                                        "enum": ["one-time", "recurring"],
                                        "example": "one-time"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "A conference about the latest in tech."
                                    },
                                    "imageUrl": {
                                        "type": "string",
                                        "example": "https://example.com/image.png"
                                    },
                                    "sessions": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "start_date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2024-12-15"
                                                },
                                                "start_time": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-12-15T10:00:00Z"
                                                },
                                                "end_time": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-12-15T15:00:00Z"
                                                }
                                            },
                                            "required": ["start_date", "start_time", "end_time"]
                                        }
                                    },
                                    "venue": {
                                        "type": "object",
                                        "properties": {
                                            "location": {
                                                "type": "string",
                                                "enum": ["on-site", "online"],
                                                "example": "on-site"
                                            },
                                            "address": {
                                                "type": "string",
                                                "example": "123 Tech Street, San Francisco, CA"
                                            },
                                            "meeting_link": {
                                                "type": "string",
                                                "example": "https://example.com/meeting"
                                            }
                                        },
                                        "required": ["location"]
                                    },
                                    "tickets": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "number_of_tickets": {
                                                    "type": "integer",
                                                    "example": 100
                                                },
                                                "admissions": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "name": {
                                                                "type": "string",
                                                                "example": "General Admission"
                                                            },
                                                            "price": {
                                                                "type": "number",
                                                                "format": "float",
                                                                "example": 50.0
                                                            }
                                                        },
                                                        "required": ["name", "price"]
                                                    }
                                                }
                                            },
                                            "required": ["status", "number_of_tickets", "admissions"]
                                        }
                                    }
                                },
                                "required": ["title", "event_category", "event_type", "sessions", "venue"]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Event successfully created.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "event": {
                                            "$ref": "#/components/schemas/Event"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized request."
                    },
                    "400": {
                        "description": "Invalid request data."
                    },
                    "500": {
                        "description": "Server error while creating event."
                    }
                }
            }
        },
        "api/events/:userId": {
            "get": {
            "tags": ["Events"],
            "summary": "Fetch events by userId",
            "description": "Retrieve all events associated with the authenticated user.",
            "security": [
                {
                "BearerAuth": []
                }
            ],
            "responses": {
                "200": {
                "description": "List of events for the user",
                "content": {
                    "application/json": {
                    "schema": {
                        "type": "object",
                        "properties": {
                        "events": {
                            "type": "array",
                            "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                "type": "string",
                                "example": "123e4567-e89b-12d3-a456-426614174000"
                                },
                                "title": {
                                "type": "string",
                                "example": "Music Concert"
                                },
                                "eventCategory": {
                                "type": "string",
                                "example": "Entertainment"
                                },
                                "eventType": {
                                "type": "string",
                                "example": "one-time"
                                },
                                "description": {
                                "type": "string",
                                "example": "An amazing music concert!"
                                },
                                "imageUrl": {
                                "type": "string",
                                "example": "https://example.com/image.png"
                                },
                                "sessions": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                    "startDate": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-11-01"
                                    },
                                    "startTime": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "19:00:00"
                                    },
                                    "endTime": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "21:00:00"
                                    }
                                    }
                                }
                                },
                                "venue": {
                                "type": "object",
                                "properties": {
                                    "location": {
                                    "type": "string",
                                    "example": "on-site"
                                    },
                                    "address": {
                                    "type": "string",
                                    "example": "123 Main St, Springfield"
                                    },
                                    "meetingLink": {
                                    "type": "string",
                                    "example": "https://example.com/meeting"
                                    }
                                }
                                }
                            }
                            }
                        }
                        }
                    }
                    }
                }
                },
                "401": {
                "description": "Unauthorized. User not authenticated.",
                "content": {
                    "application/json": {
                    "schema": {
                        "type": "object",
                        "properties": {
                        "error": {
                            "type": "string",
                            "example": "Unauthorized. Please log in."
                        }
                        }
                    }
                    }
                }
                },
                "500": {
                "description": "Internal server error.",
                "content": {
                    "application/json": {
                    "schema": {
                        "type": "object",
                        "properties": {
                        "error": {
                            "type": "string",
                            "example": "Failed to fetch events"
                        },
                        "details": {
                            "type": "string",
                            "example": "Internal server error details here"
                        }
                        }
                    }
                    }
                }
                }
            }
            }
        },
        "/api/events/update/:eventId": {
            "put": {
                "tags": ["Events"],
                "summary": "Update an existing event",
                "description": "Allows updating the details of an existing event, including sessions, venue, tickets, and admissions.",
                "parameters": [
                {
                    "name": "eventId",
                    "in": "path",
                    "required": true,
                    "description": "The unique identifier of the event to update",
                    "schema": {
                    "type": "string",
                    "example": "549bc148-57b2-4499-9556-e3240afe6f2a"
                    }
                }
                ],
                "requestBody": {
                "required": true,
                "content": {
                    "application/json": {
                    "schema": {
                        "type": "object",
                        "properties": {
                        "title": {
                            "type": "string",
                            "description": "Title of the event",
                            "example": "Skincare Classes with Lekesha Simmons"
                        },
                        "event_category": {
                            "type": "string",
                            "description": "Category of the event",
                            "example": "skincare"
                        },
                        "event_type": {
                            "type": "string",
                            "description": "Type of the event (one-time or recurring)",
                            "enum": ["one-time", "recurring"],
                            "example": "one-time"
                        },
                        "description": {
                            "type": "string",
                            "description": "Description of the event",
                            "example": "Learn how to personalize your skincare routine."
                        },
                        "sessions": {
                            "type": "array",
                            "description": "List of sessions for the event",
                            "items": {
                            "type": "object",
                            "properties": {
                                "start_date": {
                                "type": "string",
                                "format": "date",
                                "example": "2024-11-27T00:00:00Z"
                                },
                                "start_time": {
                                "type": "string",
                                "format": "time",
                                "example": "2024-11-27T15:00:00Z"
                                },
                                "end_time": {
                                "type": "string",
                                "format": "time",
                                "example": "2024-11-27T16:00:00Z"
                                }
                            }
                            }
                        },
                        "venue": {
                            "type": "object",
                            "description": "Details of the event venue",
                            "properties": {
                            "location": {
                                "type": "string",
                                "description": "Location type (on-site or online)",
                                "enum": ["on-site", "online"],
                                "example": "online"
                            },
                            "address": {
                                "type": "string",
                                "description": "Address for on-site events",
                                "example": "123 Main St, Cityville"
                            },
                            "meetingLink": {
                                "type": "string",
                                "description": "Meeting link for online events",
                                "example": "https://example.com/meeting"
                            }
                            }
                        },
                        "tickets": {
                            "type": "array",
                            "description": "Details of tickets for the event",
                            "items": {
                            "type": "object",
                            "properties": {
                                "status": {
                                "type": "boolean",
                                "description": "Indicates if the ticket is free or paid",
                                "example": true
                                },
                                "number_of_tickets": {
                                "type": "integer",
                                "description": "Number of tickets available",
                                "example": 200
                                },
                                "admissions": {
                                "type": "array",
                                "description": "Details of admissions for the ticket",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "Name of the admission",
                                        "example": "General Admission"
                                    },
                                    "price": {
                                        "type": "number",
                                        "description": "Price of the admission",
                                        "example": 20
                                    }
                                    }
                                }
                                }
                            }
                            }
                        }
                        },
                        "required": ["title", "event_category", "event_type", "sessions", "venue"]
                    }
                    }
                }
                },
                "responses": {
                "200": {
                    "description": "Event updated successfully",
                    "content": {
                    "application/json": {
                        "schema": {
                        "type": "object",
                        "properties": {
                            "event": {
                            "$ref": "#/components/schemas/Event"
                            }
                        }
                        }
                    }
                    }
                },
                "400": {
                    "description": "Invalid input or validation errors",
                    "content": {
                    "application/json": {
                        "schema": {
                        "type": "object",
                        "properties": {
                            "error": {
                            "type": "string",
                            "example": "Invalid input data"
                            }
                        }
                        }
                    }
                    }
                },
                "401": {
                    "description": "Unauthorized",
                    "content": {
                    "application/json": {
                        "schema": {
                        "type": "object",
                        "properties": {
                            "error": {
                            "type": "string",
                            "example": "Unauthorized. Please log in."
                            }
                        }
                        }
                    }
                    }
                },
                "404": {
                    "description": "Event not found",
                    "content": {
                    "application/json": {
                        "schema": {
                        "type": "object",
                        "properties": {
                            "error": {
                            "type": "string",
                            "example": "Event not found"
                            }
                        }
                        }
                    }
                    }
                },
                "500": {
                    "description": "Internal server error",
                    "content": {
                    "application/json": {
                        "schema": {
                        "type": "object",
                        "properties": {
                            "error": {
                            "type": "string",
                            "example": "Failed to update event"
                            }
                        }
                        }
                    }
                    }
                }
                }
            }
        },
        "/api/events/delete/:eventId": {
            "delete": {
                "tags": ["Events"],
                "summary": "Delete an Event",
                "description": "Delete an event by its ID. The user must own the event.",
                "parameters": [
                {
                    "name": "eventId",
                    "in": "path",
                    "required": true,
                    "description": "The ID of the event to delete.",
                    "schema": {
                    "type": "string",
                    "format": "uuid"
                    }
                }
                ],
                "responses": {
                "200": {
                    "description": "Event deleted successfully.",
                    "content": {
                    "application/json": {
                        "schema": {
                        "type": "object",
                        "properties": {
                            "message": {
                            "type": "string",
                            "example": "Event deleted successfully."
                            }
                        }
                        }
                    }
                    }
                },
                "404": {
                    "description": "Event not found or user not authorized.",
                    "content": {
                    "application/json": {
                        "schema": {
                        "type": "object",
                        "properties": {
                            "error": {
                            "type": "string",
                            "example": "Event not found or unauthorized."
                            }
                        }
                        }
                    }
                    }
                }
                }
            }
        },
        "/api/events/upload-image": {
            "post": {
                "tags": ["Events"],
                "summary": "Upload an Event Image",
                "description": "Upload an image for an event. The image will be stored in the Supabase bucket.",
                "requestBody": {
                "content": {
                    "multipart/form-data": {
                    "schema": {
                        "type": "object",
                        "properties": {
                        "file": {
                            "type": "string",
                            "format": "binary",
                            "description": "The image file to upload."
                        }
                        }
                    }
                    }
                },
                "required": true
                },
                "responses": {
                "200": {
                    "description": "Image uploaded successfully.",
                    "content": {
                    "application/json": {
                        "schema": {
                        "type": "object",
                        "properties": {
                            "message": {
                            "type": "string",
                            "example": "Image uploaded successfully."
                            },
                            "imageUrl": {
                            "type": "string",
                            "example": "https://supabase.bucket.url/image.png"
                            }
                        }
                        }
                    }
                    }
                },
                "400": {
                    "description": "Invalid file format or size.",
                    "content": {
                    "application/json": {
                        "schema": {
                        "type": "object",
                        "properties": {
                            "error": {
                            "type": "string",
                            "example": "Invalid file format or size."
                            }
                        }
                        }
                    }
                    }
                }
                }
            }
        },
        "/api/registrations/create": {
            "post": {
                "tags": ["Registrations"],
                "summary": "Register for an Event",
                "description": "Register a user for an event with the selected admissions.",
                "requestBody": {
                "content": {
                    "application/json": {
                    "schema": {
                        "type": "object",
                        "properties": {
                        "firstName": {
                            "type": "string",
                            "example": "John"
                        },
                        "lastName": {
                            "type": "string",
                            "example": "Doe"
                        },
                        "email": {
                            "type": "string",
                            "format": "email",
                            "example": "johndoe@example.com"
                        },
                        "phoneNumber": {
                            "type": "string",
                            "example": "1234567890"
                        },
                        "eventId": {
                            "type": "string",
                            "format": "uuid",
                            "example": "123e4567-e89b-12d3-a456-426614174000"
                        },
                        "admissions": {
                            "type": "array",
                            "items": {
                            "type": "object",
                            "properties": {
                                "admissionId": {
                                "type": "string",
                                "format": "uuid",
                                "example": "456e7890-e89b-12d3-a456-426614174111"
                                },
                                "quantity": {
                                "type": "integer",
                                "example": 2
                                }
                            }
                            }
                        }
                        },
                        "required": ["firstName", "lastName", "email", "phoneNumber", "eventId", "admissions"]
                    }
                    }
                }
                },
                "responses": {
                "201": {
                    "description": "Registration successful.",
                    "content": {
                    "application/json": {
                        "schema": {
                        "type": "object",
                        "properties": {
                            "message": {
                            "type": "string",
                            "example": "Registration successful."
                            },
                            "registration": {
                            "$ref": "#/components/schemas/Registration"
                            }
                        }
                        }
                    }
                    }
                },
                "400": {
                    "description": "Failed to register for event.",
                    "content": {
                    "application/json": {
                        "schema": {
                        "type": "object",
                        "properties": {
                            "error": {
                            "type": "string",
                            "example": "Invalid data."
                            }
                        }
                        }
                    }
                    }
                }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        },
        "schemas": {
            "Event": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "example": "abc123"
                    },
                    "name": {
                        "type": "string",
                        "example": "Tech Conference"
                    },
                    "description": {
                        "type": "string",
                        "example": "A conference about the latest in tech."
                    },
                    "date": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-12-15T10:00:00Z"
                    },
                    "createdBy": {
                        "type": "string",
                        "example": "user123"
                    },
                    "imageUrl": {
                        "type": "string",
                        "example": "https://example.com/image.png"
                    }
                }
            }
        }
    }
}

